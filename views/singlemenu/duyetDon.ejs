<%- include('../inc/header-user.ejs') %>

<div style="margin-top: 80px; margin-left: 320px; ">
  <div class="table-responsive">
    <table class="table">
      <thead>
        <tr>
          <th scope="col">Địa Chỉ Đơn Hàng</th>
          <th scope="col">Sản Phẩm</th>
          <th scope="col">Tổng Giá</th>
          <th scope="col">Phương Thức Thanh Toán</th>
          <th scope="col">Trạng Thái</th>
          <th scope="col">Ghi Chú</th>
          <th scope="col">Thời Gian</th>
          <th scope="col">Cập Nhật Trạng Thái</th>
        </tr>
      </thead>
      <tbody id="orderTableBody">
        <!-- Dữ liệu sẽ được cập nhật tại đây -->
      </tbody>
    </table>
  </div>
</div>
<%- include('../inc/footer.ejs') %>
<script>
  document.addEventListener('DOMContentLoaded', async function () {
    try {
      const response = await fetch('/api/ordersByRestaurant');
      const orders = await response.json();
      const tableBody = document.getElementById('orderTableBody');

      orders
      .filter(order => order.status !== 3)
      .forEach(order => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${order.address}</td>
          <td>${order.products.map(product => `${product.name} x${product.quantity}`).join('<br>')}</td>
          <td>${order.toltalprice}</td>
          <td>${order.phuongthucthanhtoan === 'cash' ? 'Thanh toán tiền mặt' : 'Chuyển khoản'}</td>
          <td>${getOrderStatusText(order.status)}</td>
          <td>${order.notes}</td>
          <td>${new Date(order.time).toLocaleString()}</td>
          <td>
            <form onsubmit="updateOrderStatus(event, '${order._id}')">
              <div class="update-status-container">
              <select id="statusSelect-${order._id}" data-orderid="${order._id}">
                <option value="1" ${order.status === 1 ? 'selected' : ''}>Đã xác nhận</option>
                <option value="2" ${order.status === 2 ? 'selected' : ''}>Đang giao</option>
                <option value="3" ${order.status === 3 ? 'selected' : ''}>Đã giao</option>
                <option value="4" ${order.status === 4 ? 'selected' : ''}>Đã hủy</option>
              </select>
              <button type="submit">Cập nhật</button>
              </div>
            </form>
          </td>
        `;
        tableBody.appendChild(row);
        if (order.status === 3) {
        row.style.display = 'none';
      }
      });
    } catch (error) {
      console.error('Error fetching or processing data:', error);
    }
  });

  async function updateOrderStatus(event, orderId) {
    event.preventDefault();  // Ngăn chặn sự kiện mặc định của form
    const statusSelect = document.getElementById(`statusSelect-${orderId}`);
    const newStatus = statusSelect.value;

    try {
      const response = await fetch(`/api/updateOrderStatus/${orderId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status: newStatus }),
      });

      const result = await response.json();
      console.log(result);
      location.reload();

      const statusCell = document.querySelector(`[data-orderid="${orderId}"]`);
      statusCell.innerHTML = getOrderStatusText(newStatus);
    } catch (error) {
      console.error('Error updating order status:', error);
    }
  }

  function getOrderStatusText(status) {
    switch (parseInt(status)) {
      case 1:
        return 'Đã xác nhận';
      case 2:
        return 'Đang giao';
      case 3:
        return 'Đã giao';
      case 4: 
        return 'Đã hủy'
      default:
        return 'Chờ xác nhận';
    }
  }
</script>

